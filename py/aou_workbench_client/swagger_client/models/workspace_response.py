# coding: utf-8

"""
    AllOfUs Workbench API

    The API for the AllOfUs workbench.

    OpenAPI spec version: 0.1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class WorkspaceResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'workspace': 'Workspace',
        'access_level': 'WorkspaceAccessLevel'
    }

    attribute_map = {
        'workspace': 'workspace',
        'access_level': 'accessLevel'
    }

    def __init__(self, workspace=None, access_level=None):
        """
        WorkspaceResponse - a model defined in Swagger
        """

        self._workspace = None
        self._access_level = None
        self.discriminator = None

        self.workspace = workspace
        self.access_level = access_level

    @property
    def workspace(self):
        """
        Gets the workspace of this WorkspaceResponse.

        :return: The workspace of this WorkspaceResponse.
        :rtype: Workspace
        """
        return self._workspace

    @workspace.setter
    def workspace(self, workspace):
        """
        Sets the workspace of this WorkspaceResponse.

        :param workspace: The workspace of this WorkspaceResponse.
        :type: Workspace
        """
        if workspace is None:
            raise ValueError("Invalid value for `workspace`, must not be `None`")

        self._workspace = workspace

    @property
    def access_level(self):
        """
        Gets the access_level of this WorkspaceResponse.

        :return: The access_level of this WorkspaceResponse.
        :rtype: WorkspaceAccessLevel
        """
        return self._access_level

    @access_level.setter
    def access_level(self, access_level):
        """
        Sets the access_level of this WorkspaceResponse.

        :param access_level: The access_level of this WorkspaceResponse.
        :type: WorkspaceAccessLevel
        """
        if access_level is None:
            raise ValueError("Invalid value for `access_level`, must not be `None`")

        self._access_level = access_level

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, WorkspaceResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
